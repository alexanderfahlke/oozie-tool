#!/usr/bin/env bash

# Copyright 2014 Alexander Fahlke
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

bin=`which $0`
bin=`dirname ${bin}`
bin=`cd "$bin"; pwd`

export OOZIE_TOOL_CONF_DIR="$bin"/../conf
export OOZIE_TOOL_LIBEXEC_DIR="$bin"/../libexec

# check if the config file exists
echo -e "Checking for config file"
echo "--------------------------------------------------------------------------------"
if [ ! -f "${OOZIE_TOOL_CONF_DIR}/config.ini" ]; then
	echo -e "\e[00;31mERROR\e[00m config.ini not found!"
	exit 1
else
	echo -e "\e[00;32mOK\e[00m config.ini found";
fi
echo ""
source "${OOZIE_TOOL_CONF_DIR}/config.ini"

# check the local oozie client
echo -e "Checking local oozie client"
echo "--------------------------------------------------------------------------------"
OOZIE_CLIENT_TEST=$(${OOZIE_BIN} version)
if [ $? = "1" ]; then
	echo -e "\e[00;31mERROR\e[00m oozie client not working"
	exit 2
fi
echo -e "\e[00;32mOK\e[00m oozie client working";
echo ""

# check if we can connect to the port on the given host
echo -e "Connecting to oozie server on \"${OOZIE_HOSTNAME}:${OOZIE_PORT}\""
echo "--------------------------------------------------------------------------------"
nc -w2 ${OOZIE_HOSTNAME} ${OOZIE_PORT} < /dev/null
if [ $? = "1" ]; then
	echo -e "\e[00;31mERROR\e[00m oozie server not reachable"
	exit 3
fi
echo -e "\e[00;32mOK\e[00m oozie server reached";
echo ""

# check if oozie returns anything
echo -e "Checking oozie server status on \"${OOZIE_HOSTNAME}:${OOZIE_PORT}\""
echo "--------------------------------------------------------------------------------"
OOZIE_SERVER_TEST=$(${OOZIE_BIN} admin -oozie http://${OOZIE_HOSTNAME}:${OOZIE_PORT}/oozie -status | grep -oP "NORMAL")
if [ ${OOZIE_SERVER_TEST} != "NORMAL" ]; then
	echo -e "\e[00;31mERROR\e[00m oozie server not in NORMAL state"
	exit 4
fi
echo -e "\e[00;32mOK\e[00m oozie server answered with status NORMAL";
echo ""

